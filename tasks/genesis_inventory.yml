---
- name: Run LCM Initial Inventory
  uri:
    url: "{{ nutanix_api_v1 }}/genesis"
    body:
      value: '{".oid":"LifeCycleManager",".method":"lcm_framework_rpc",".kwargs":{"method_class":"LcmFramework","method":"perform_inventory","args":["http: //download.nutanix.com/lcm/2.0"]}}'
    method: POST
    validate_certs: "{{ validate_certs }}"
    body_format: json
    status_code: 200
    headers:
      Authorization: "{{ nutanix_api_auth }}"
  register: nutanix_lcm_initial_inventory_result
  ignore_errors: no

- name: Debug nutanix_lcm_initial_inventory_result.json
  debug:
    var: nutanix_lcm_initial_inventory_result.json
  when:
    - nutanix_debug

- set_fact:
    nutanix_lcm_initial_inventory_result_value: "{{ nutanix_lcm_initial_inventory_result.json | community.general.json_query(query) | to_json | from_json }}"
  vars:
    query: "value"

- name: Debug nutanix_lcm_initial_inventory_result_value
  debug:
    var: nutanix_lcm_initial_inventory_result_value
  when:
    - nutanix_debug

- name: Store LCM inventory task uuid
  set_fact:
    nutanix_lcm_initial_inventory_task_uuid: "{{ nutanix_lcm_initial_inventory_result_value | community.general.json_query(query) }}"
  vars:
    query: '".return"'

- name: Debug nutanix_lcm_initial_inventory_task_uuid
  debug:
    var: nutanix_lcm_initial_inventory_task_uuid
  when:
    - nutanix_debug

- name: Debug nutanix_lcm_initial_inventory_task_uuid
  debug:
    var: nutanix_lcm_initial_inventory_task_uuid
  when:
    - nutanix_debug

- name: Debug nutanix_lcm_initial_inventory_task_uuid
  uri:
    url: "{{ nutanix_api_v2 }}/tasks/{{ nutanix_lcm_initial_inventory_task_uuid }}"
    method: GET
    validate_certs: "{{ validate_certs }}"
    status_code: 200
    headers:
      Authorization: "{{ nutanix_api_auth }}"
  register: nutanix_lcm_initial_inventory_task_status_debug

- name: Debug nutanix_lcm_initial_inventory_task_status_debug.json
  debug:
    var: nutanix_lcm_initial_inventory_task_status_debug.json
  when:
    - nutanix_debug

- name: Wait for LCM inventory task to complete
  block:
    - name: Checking LCM inventory status
      uri:
        url: "{{ nutanix_api_v2 }}/tasks/{{ nutanix_lcm_initial_inventory_task_uuid }}"
        method: GET
        validate_certs: "{{ validate_certs }}"
        status_code: 200
        headers:
          Authorization: "{{ nutanix_api_auth }}"
      register: nutanix_lcm_initial_inventory_task_status
      until: nutanix_lcm_initial_inventory_task_status.json.progress_status == 'Succeeded' or nutanix_lcm_initial_inventory_task_status.json.progress_status == 'Failed'
      retries: 50
      delay: 60

    - name: Debug nutanix_lcm_initial_inventory_task_status.json
      debug:
        var: nutanix_lcm_initial_inventory_task_status.json
      when:
        - nutanix_debug

- name: LCM inventory task failed
  ansible.builtin.fail:
    msg: "LCM inventory task failed. {{ nutanix_lcm_initial_inventory_task_status.json.message }}"
  when: nutanix_lcm_initial_inventory_task_status.json.progress_status == 'Failed'

- name: Pause for 30 seconds allow new LCM upgrade to become available
  ansible.builtin.pause:
    seconds: 30
